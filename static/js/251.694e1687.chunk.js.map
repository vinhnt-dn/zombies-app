{"version":3,"file":"static/js/251.694e1687.chunk.js","mappings":"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","sources":["os/configs/sol.config.ts","os/configs/register.config.ts","os/configs/referral.config.ts","os/configs/stat.config.ts","os/configs/index.ts","os/providers/ui.provider.tsx","os/providers/pool.provider.tsx","os/providers/wallet.provider.tsx","os/providers/account.provider.tsx","os/providers/tokenProvider/index.ts","os/providers/mint.provider.tsx","os/providers/tokenProvider/supplementary.ts","os/store/accounts.reducer.ts","os/store/flags.reducer.ts","os/store/index.ts","os/store/mints.reducer.ts","os/store/page.reducer.ts","os/store/pools.reducer.ts","os/store/search.reducer.ts","os/store/ui.reducer.ts","os/store/walkthrough.reducer.ts","os/store/wallet.reducer.ts"],"sourcesContent":["import { Net } from 'shared/runtime'\n\nconst SOLVARS = {\n  spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n  splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n}\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  chainId: 101 | 102 | 103\n  sntrAddress: string\n  sntrPoolAddress: string\n  swapAddress: string\n  taxmanAddress: string\n} & typeof SOLVARS\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    ...SOLVARS,\n    node: 'https://api.devnet.solana.com',\n    chainId: 103,\n    sntrAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    sntrPoolAddress: '3EUPL7YQLbU6DNU5LZeQeHPXTf1MigJ2yASXA9rH5Ku4',\n    swapAddress: '4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    ...SOLVARS,\n    node: 'https://api.testnet.solana.com',\n    chainId: 102,\n    sntrAddress: '',\n    sntrPoolAddress: '',\n    swapAddress: '',\n    taxmanAddress: '',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    ...SOLVARS,\n    node: 'https://solana-api.projectserum.com',\n    chainId: 101,\n    sntrAddress: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    sntrPoolAddress: 'Aa3WZX7Xunfebp2MuAcz9CNw8TYTDL7mVrmb11rjyVm6',\n    swapAddress: 'SSW7ooZ1EbEognq5GosbygA3uWW1Hq1NsFq6TsftCFV',\n    taxmanAddress: '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_NAME !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error(\n    'Please add REACT_APP_ID, REACT_APP_NAME, REACT_APP_URL in .env.local!',\n  )\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  defaultAppId: string\n  extra: SenReg\n  senreg: string\n}\n\nconst DEFAULT_APP_ID = process.env.REACT_APP_ID\nconst devApp = {\n  [DEFAULT_APP_ID]: {\n    url: process.env.REACT_APP_URL,\n    appId: DEFAULT_APP_ID,\n    name: process.env.REACT_APP_NAME,\n    author: {\n      name: process.env.REACT_APP_AUTHOR_NAME || '',\n      email: process.env.REACT_APP_AUTHOR_EMAIL || '',\n    },\n    supportedViews: (process.env.REACT_APP_SUPPORTED_VIEWS || '')\n      .split(',')\n      .map((view) => view.trim())\n      .filter((view) => ['page', 'widget'].includes(view)) as Array<\n      'widget' | 'page'\n    >,\n    tags: (process.env.REACT_APP_TAGS || '')\n      .split(',')\n      .map((tag) => tag.trim()),\n    description: process.env.REACT_APP_DESCRIPTION || '',\n    verified: false,\n  },\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    defaultAppId: DEFAULT_APP_ID,\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    defaultAppId: DEFAULT_APP_ID,\n    extra: devApp,\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    defaultAppId: DEFAULT_APP_ID,\n    extra: {},\n    senreg: 'https://descartesnetwork.github.io/senreg/register.json',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Env } from 'shared/runtime'\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  base: string\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    base: `${window.location.origin}/dashboard?referrer=`,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    base: 'https://hub.sentre.io/dashboard?referrer=',\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    base: 'https://hub.sentre.io/dashboard?referrer=',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net } from 'shared/runtime'\n\n/**\n * Contructor\n */\ntype Config = {\n  baseURL: string\n}\n\nconst config: Record<Net, Config> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    baseURL: 'https://stat-dev.sentre.io',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    baseURL: 'https://stat-dev.sentre.io',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    baseURL: 'https://stat.sentre.io',\n  },\n}\n\n/**\n * Module exports\n */\nexport default config\n","import { net, env } from 'shared/runtime'\nimport sol from './sol.config'\nimport register from './register.config'\nimport referral from './referral.config'\nimport stat from './stat.config'\n\nconst configs = {\n  sol: sol[net],\n  register: register[env],\n  referral: referral[env],\n  stat: stat[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n  CSSProperties,\n} from 'react'\n\nimport { ConfigProvider } from 'antd'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { UIState } from 'os/store/ui.reducer'\nimport { ConfigProviderProps } from 'antd/lib/config-provider'\n\nconst Context = createContext<UIProvider>({} as UIProvider)\n\nexport type UIProvider = {\n  ui: UIState\n}\n\n/**\n * UI Context Provider\n */\nconst UIContextProvider = ({\n  children,\n  appId,\n  style = {},\n  antd = false,\n}: {\n  children: ReactNode\n  appId: string\n  style?: CSSProperties\n  antd?: boolean | ConfigProviderProps\n}) => {\n  const { ui } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ ui }), [ui])\n  const configProvider = antd\n    ? {\n        getPopupContainer: () => document.getElementById(appId) as HTMLElement,\n        ...(typeof antd === 'object' ? antd : {}),\n      }\n    : undefined\n\n  return (\n    <Context.Provider value={provider}>\n      <section\n        id={appId}\n        style={{ height: '100%', backgroundColor: 'transparent', ...style }}\n      >\n        {configProvider ? (\n          <ConfigProvider {...configProvider}>{children}</ConfigProvider>\n        ) : (\n          children\n        )}\n      </section>\n    </Context.Provider>\n  )\n}\nexport default UIContextProvider\n\n/**\n * UI Context Consumer\n */\nconst UIComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * UI HOC\n */\nexport const withUI = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <UIComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </UIComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * UI Hook\n */\nexport const useUI = () => {\n  return useContext<UIProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { PoolsState } from 'os/store/pools.reducer'\n\nconst Context = createContext<PoolProvider>({} as PoolProvider)\n\nexport type PoolProvider = {\n  pools: PoolsState\n}\n\n/**\n * Pool Context Provider\n */\nconst PoolContextProvider = ({ children }: { children: ReactNode }) => {\n  const { pools } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ pools }), [pools])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default PoolContextProvider\n\n/**\n * Pool Context Consumer\n */\nconst PoolContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Pool HOC\n */\nexport const withPool = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <PoolContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </PoolContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Pool Hook\n */\nexport const usePool = () => {\n  return useContext<PoolProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { WalletState } from 'os/store/wallet.reducer'\n\nconst Context = createContext<WalletProvider>({} as WalletProvider)\n\nexport type WalletProvider = {\n  wallet: WalletState\n}\n\n/**\n * Wallet Context Provider\n */\nconst WalletContextProvider = ({ children }: { children: ReactNode }) => {\n  const { wallet } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ wallet }), [wallet])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default WalletContextProvider\n\n/**\n * Wallet Context Consumer\n */\nconst WalletContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Wallet HOC\n */\nexport const withWallet = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <WalletContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </WalletContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Wallet Hook\n */\nexport const useWallet = () => {\n  return useContext<WalletProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport { useRootSelector, RootState } from 'os/store'\nimport { AccountsState } from 'os/store/accounts.reducer'\n\nconst Context = createContext<AccountProvider>({} as AccountProvider)\n\nexport type AccountProvider = {\n  accounts: AccountsState\n}\n\n/**\n * Account Context Provider\n */\nconst AccountContextProvider = ({ children }: { children: ReactNode }) => {\n  const { accounts } = useRootSelector((state: RootState) => state)\n  const provider = useMemo(() => ({ accounts }), [accounts])\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default AccountContextProvider\n\n/**\n * Account Context Consumer\n */\nconst AccountContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Account HOC\n */\nexport const withAccount = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <AccountContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </AccountContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Account Hook\n */\nexport const useAccount = () => {\n  return useContext<AccountProvider>(Context)\n}\n","import { Document } from 'flexsearch'\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry'\n\nimport { net } from 'shared/runtime'\nimport configs from 'os/configs'\nimport supplementary, { sntr, sol } from './supplementary'\n\nconst {\n  sol: { chainId },\n} = configs\nconst DELIMITER = /[\\W_]+/g\nconst PRESET = {\n  tokenize: 'full',\n  context: true,\n  minlength: 3,\n}\nconst DOCUMENT = {\n  document: {\n    id: 'address',\n    index: [\n      { field: 'symbol', ...PRESET },\n      { field: 'name', ...PRESET },\n    ],\n  },\n}\n\nclass TokenProvider {\n  private tokenMap: Map<string, TokenInfo>\n  private engine: typeof Document | undefined\n  readonly chainId: typeof chainId\n  readonly cluster: typeof net\n  private loading: boolean\n  private queue: Array<any>\n\n  constructor() {\n    this.tokenMap = new Map<string, TokenInfo>()\n    this.engine = undefined\n    this.chainId = chainId\n    this.cluster = net\n    this.loading = false\n    this.queue = []\n    // Init\n    this._init()\n  }\n\n  private _init = async (): Promise<[Map<string, TokenInfo>, any]> => {\n    if (this.tokenMap.size) return [this.tokenMap, this.engine]\n    return new Promise(async (resolve) => {\n      // Queue of getters to avoid race condition of multiple _init calling\n      if (this.loading) return this.queue.push(resolve)\n      // Start\n      this.loading = true\n      // Build token list\n      let tokenList = await (await new TokenListProvider().resolve())\n        .filterByChainId(this.chainId)\n        .getList()\n      if (this.cluster === 'devnet') tokenList = tokenList.concat(supplementary)\n      if (this.cluster === 'testnet')\n        tokenList = tokenList.concat([sntr(102), sol(102)])\n      else tokenList = tokenList.concat([sol(101)])\n      // Build token map\n      tokenList.forEach((token) => this.tokenMap.set(token.address, token))\n      // Build search engine\n      this.engine = new Document(DOCUMENT)\n      this.tokenMap.forEach(({ address, ...doc }) =>\n        this.engine.add(address, doc),\n      )\n      // Resolve the main getter\n      resolve([this.tokenMap, this.engine])\n      // Resolve the rest of getters\n      while (this.queue.length) this.queue.shift()([this.tokenMap, this.engine])\n      // Finish\n      this.loading = false\n    })\n  }\n\n  all = async (): Promise<TokenInfo[]> => {\n    const [tokenMap] = await this._init()\n    return Array.from(tokenMap.values())\n  }\n\n  findByAddress = async (addr: string): Promise<TokenInfo | undefined> => {\n    const [tokenMap] = await this._init()\n    return tokenMap.get(addr)\n  }\n\n  find = async (keyword: string, limit?: 10): Promise<TokenInfo[]> => {\n    const [tokenMap, engine] = await this._init()\n    let tokens: TokenInfo[] = []\n    keyword.split(DELIMITER).forEach((key) => {\n      const raw: Array<{ result: string[] }> = engine.search(key, limit)\n      return raw.forEach(({ result }) => {\n        return result.forEach((id: string) => {\n          if (tokens.findIndex(({ address }) => address === id) < 0) {\n            const token = tokenMap.get(id)\n            if (token) tokens.push(token)\n          }\n        })\n      })\n    })\n    return tokens\n  }\n}\n\nexport default TokenProvider\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  useCallback,\n  ReactNode,\n  useMemo,\n} from 'react'\n\nimport {\n  useRootDispatch,\n  useRootSelector,\n  RootState,\n  RootDispatch,\n} from 'os/store'\nimport { getMint as _getMint, MintsState } from 'os/store/mints.reducer'\nimport TokenProvider from './tokenProvider'\nimport { account } from '@senswap/sen-js'\n\nconst tokenProvider = new TokenProvider()\nconst Context = createContext<MintProvider>({} as MintProvider)\n\nexport type MintProvider = {\n  mints: MintsState\n  getMint: (...agrs: Parameters<typeof _getMint>) => Promise<MintsState>\n  getDecimals: (mintAddress: string) => Promise<number>\n  tokenProvider: TokenProvider\n}\n\n/**\n * Mint Context Provider\n */\nconst MintContextProvider = ({ children }: { children: ReactNode }) => {\n  const dispatch = useRootDispatch<RootDispatch>()\n  const { mints, pools } = useRootSelector((state: RootState) => state)\n  const getMint = useCallback(\n    async (...agrs: Parameters<typeof _getMint>) =>\n      await dispatch(_getMint(...agrs)).unwrap(),\n    [dispatch],\n  )\n  const getDecimals = useCallback(\n    async (mintAddress: string) => {\n      if (!account.isAddress(mintAddress))\n        throw new Error('Invalid mint address')\n      // If the token is in token provider, return its decimals\n      const tokenInfo = await tokenProvider.findByAddress(mintAddress)\n      if (tokenInfo?.decimals) return tokenInfo.decimals\n      // If the token is lp, return 9 as default\n      const index = Object.values(pools).findIndex(\n        ({ mint_lpt }) => mint_lpt === mintAddress,\n      )\n      if (index >= 0) return 9\n      // Fetch from the clustters\n      const mintData = await getMint({ address: mintAddress })\n      if (mintData[mintAddress]?.decimals) return mintData[mintAddress].decimals\n      throw new Error('Cannot find mint decimals')\n    },\n    [getMint, pools],\n  )\n  const provider = useMemo(\n    () => ({ mints, getMint, getDecimals, tokenProvider }),\n    [mints, getMint, getDecimals],\n  )\n  // Context provider\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default MintContextProvider\n\n/**\n * Mint Context Consumer\n */\nconst MintContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Mint HOC\n */\nexport const withMint = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <MintContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </MintContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Mint Hook\n */\nexport const useMint = () => {\n  return useContext<MintProvider>(Context)\n}\n","// Pseudo native sol info\n// It's for all networks\nexport const sol = (chainId: 101 | 102 | 103) => ({\n  symbol: 'SOL',\n  name: 'Solana',\n  address: '11111111111111111111111111111111',\n  decimals: 9,\n  chainId,\n  extensions: {\n    coingeckoId: 'solana',\n  },\n  logoURI:\n    'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/So11111111111111111111111111111111111111112/logo.png',\n})\n\n// Pseudo SNTR info\n// Only for devnet and testnet\nexport const sntr = (chainId: 102 | 103) => ({\n  symbol: 'SNTR',\n  name: 'Sentre',\n  address: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n  decimals: 9,\n  chainId,\n  extensions: {\n    coingeckoId: 'sentre',\n  },\n  logoURI:\n    'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M/logo.png',\n})\n\n// Pseudo token infos for devnet\nconst supplementary = [\n  sol(103),\n  sntr(103),\n  {\n    symbol: 'wBTC',\n    name: 'Wrapped Bitcoin',\n    address: '8jk4eJymMfNZV9mkRNxJEt2VJ3pRvdJvD5FE94GXGBPM',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'bitcoin',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/qfnqNqs3nCAHjnyCgLRDbBtq4p2MtHZxw8YjSyYhPoL/logo.png',\n  },\n  {\n    symbol: 'wETH',\n    name: 'Ethereum',\n    address: '27hdcZv7RtuMp75vupThR3T4KLsL61t476eosMdoec4c',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'ethereum',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/FeGn77dhg1KXRRFeSwwMiykZnZPw5JXW6naf2aQgZDQf/logo.png',\n  },\n  {\n    symbol: 'UNI',\n    name: 'Uniswap',\n    address: 'FVZFSXu3yn17YdcxLD72TFDUqkdE5xZvcW18EUpRQEbe',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'uniswap',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/3MVa4e32PaKmPxYUQ6n8vFkWtCma68Ld7e7fTktWDueQ/logo.png',\n  },\n  {\n    symbol: 'USDC',\n    name: 'USD Coin',\n    address: '2z6Ci38Cx6PyL3tFrT95vbEeB3izqpoLdxxBkJk2euyj',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'usd-coin',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v/logo.png',\n  },\n]\n\nexport default supplementary\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, AccountData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type AccountsState = Record<string, AccountData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'accounts'\nconst initialState: AccountsState = {}\n\n/**\n * Actions\n */\n\nexport const getAccounts = createAsyncThunk(\n  `${NAME}/getAccounts`,\n  async ({ owner }: { owner: string }) => {\n    if (!account.isAddress(owner))\n      throw new Error('Invalid owner/wallet address')\n    const { splt } = window.sentre\n    const ownerPublicKey = account.fromAddress(owner)\n    const { value } = await splt.connection.getTokenAccountsByOwner(\n      ownerPublicKey,\n      { programId: splt.spltProgramId },\n    )\n    let bulk: AccountsState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = splt.parseAccountData(buf)\n      return (bulk[address] = data)\n    })\n    return bulk\n  },\n)\n\nexport const getAccount = createAsyncThunk<\n  AccountsState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getAccount`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid account address')\n  const {\n    accounts: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { splt } = window.sentre\n  const raw = await splt.getAccountData(address)\n  return { [address]: raw }\n})\n\nexport const upsetAccount = createAsyncThunk<\n  AccountsState,\n  { address: string; data: AccountData },\n  { state: any }\n>(`${NAME}/upsetAccount`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteAccount = createAsyncThunk(\n  `${NAME}/deleteAccount`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getAccounts.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteAccount.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\nimport PDB from 'shared/pdb'\n\n/**\n * Interface & Utility\n */\n\ntype FlagsState = {\n  visited: boolean\n  referred: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'flags'\nconst initialState: FlagsState = {\n  visited: true,\n  referred: false,\n}\n\n/**\n * Actions\n */\n\nexport const loadVisited = createAsyncThunk<\n  Partial<FlagsState>,\n  void,\n  { state: any }\n>(`${NAME}/loadVisited`, async (_, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet')\n  const db = new PDB(walletAddress).createInstance('sentre')\n  const visited: boolean = (await db.getItem('visited')) || false\n  return { visited }\n})\n\nexport const updateVisited = createAsyncThunk<\n  Partial<FlagsState>,\n  boolean,\n  { state: any }\n>(`${NAME}/updateVisited`, async (visited, { getState }) => {\n  const {\n    wallet: { address },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  const db = new PDB(address).createInstance('sentre')\n  await db.setItem('visited', visited)\n  return { visited }\n})\n\nexport const loadReferred = createAsyncThunk<\n  Partial<FlagsState>,\n  void,\n  { state: any }\n>(`${NAME}/loadReferred`, async (_, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet')\n  const db = new PDB(walletAddress).createInstance('sentre')\n  const referred: boolean = (await db.getItem('referred')) || false\n  return { referred }\n})\n\nexport const updateReferred = createAsyncThunk<\n  Partial<FlagsState>,\n  boolean,\n  { state: any }\n>(`${NAME}/updateReferred`, async (referred, { getState }) => {\n  const {\n    wallet: { address },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  const db = new PDB(address).createInstance('sentre')\n  await db.setItem('referred', referred)\n  return { referred }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        loadVisited.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateVisited.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        loadReferred.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateReferred.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import {\n  createDispatchHook,\n  createSelectorHook,\n  createStoreHook,\n  useDispatch,\n  useSelector,\n} from 'react-redux'\nimport { configureStore } from '@reduxjs/toolkit'\nimport { RootContext } from '@senhub/context'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport ui from './ui.reducer'\nimport flags from './flags.reducer'\nimport page from './page.reducer'\nimport wallet from './wallet.reducer'\nimport accounts from './accounts.reducer'\nimport mints from './mints.reducer'\nimport pools from './pools.reducer'\nimport search from './search.reducer'\nimport walkthrough from './walkthrough.reducer'\n\n/**\n * Root types\n */\nexport type RootState = ReturnType<typeof store.getState>\nexport type RootDispatch = typeof store.dispatch\n\n/**\n * Root hooks\n */\nexport const useRootStore = createStoreHook(RootContext)\nexport const useRootDispatch: typeof useDispatch =\n  createDispatchHook(RootContext)\nexport const useRootSelector: typeof useSelector =\n  createSelectorHook(RootContext)\n\n/**\n * Root store\n */\nconst store = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools('sentre'),\n  reducer: {\n    ui,\n    flags,\n    page,\n    wallet,\n    accounts,\n    mints,\n    pools,\n    search,\n    walkthrough,\n  },\n})\n\nexport default store\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, MintData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type MintsState = Record<string, MintData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'mints'\nconst initialState: MintsState = {}\n\n/**\n * Actions\n */\n\nexport const getMint = createAsyncThunk<\n  MintsState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getMint`, async ({ address, force = false }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid mint address')\n  if (!force) {\n    const {\n      accounts: { [address]: data },\n    } = getState()\n    if (data) return { [address]: data }\n  }\n  const { splt } = window.sentre\n  const raw = await splt.getMintData(address)\n  return { [address]: raw }\n})\n\nexport const upsetMint = createAsyncThunk<\n  MintsState,\n  { address: string; data: MintData },\n  { state: any }\n>(`${NAME}/upsetMint`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteMint = createAsyncThunk(\n  `${NAME}/deleteMint`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteMint.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\nimport PDB from 'shared/pdb'\nimport configs from 'os/configs'\n\nconst {\n  register: { senreg, extra },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type PageState = {\n  register: SenReg\n  appIds: AppIds\n  widgetIds: AppIds\n}\n\nconst troubleshoot = (register: SenReg, appIds?: AppIds): AppIds => {\n  if (!appIds || !Array.isArray(appIds)) return []\n  return appIds.filter((appId) => register[appId])\n}\nconst fetchRegister = async () => {\n  try {\n    const res = await fetch(senreg)\n    return await res.json()\n  } catch (er) {\n    return {}\n  }\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'page'\nconst initialState: PageState = {\n  register: {},\n  appIds: [],\n  widgetIds: [],\n}\n\n/**\n * Actions\n */\n\n// Must fetch register at very first of the process\nexport const loadRegister = createAsyncThunk(\n  `${NAME}/loadRegister`,\n  async () => {\n    const register = await fetchRegister()\n    return { register: { ...register, ...extra } }\n  },\n)\n\n// For sandbox only\nexport const installManifest = createAsyncThunk<\n  Partial<PageState>,\n  ComponentManifest,\n  { state: any }\n>(`${NAME}/installManifest`, async (manifest, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { appIds, widgetIds, register },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (appIds.includes(manifest.appId))\n    throw new Error('Cannot run sandbox for an installed application.')\n  const newAppIds: AppIds = [...appIds]\n  newAppIds.push(manifest.appId)\n  const newWidgetIds: AppIds = [...widgetIds]\n  if (manifest.supportedViews.includes('widget'))\n    newWidgetIds.push(manifest.appId)\n  const newRegister: SenReg = { ...register }\n  newRegister[manifest.appId] = manifest\n  return { appIds: newAppIds, widgetIds: newWidgetIds, register: newRegister }\n})\n\n/**\n * App Actions\n */\nexport const loadPage = createAsyncThunk<\n  Partial<PageState>,\n  void,\n  { state: any }\n>(`${NAME}/loadPage`, async (_, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { register },\n  } = getState()\n\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  // Fetch user's apps\n  const db = new PDB(walletAddress).createInstance('sentre')\n  const appIds = troubleshoot(\n    register,\n    (await db.getItem('appIds')) || initialState.appIds,\n  )\n  const widgetIds = troubleshoot(\n    register,\n    (await db.getItem('widgetIds')) || initialState.widgetIds,\n  )\n  return { appIds, widgetIds }\n})\n\nexport const updatePage = createAsyncThunk<\n  Partial<PageState>,\n  AppIds,\n  { state: any }\n>(`${NAME}/updatePage`, async (appIds, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { register },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  appIds = troubleshoot(register, appIds)\n  const db = new PDB(walletAddress).createInstance('sentre')\n  await db.setItem('appIds', appIds)\n  return { appIds }\n})\n\nexport const installApp = createAsyncThunk<\n  Partial<PageState>,\n  string,\n  { state: any }\n>(`${NAME}/installApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { register, appIds, widgetIds },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (appIds.includes(appId)) return {}\n  const newAppIds: AppIds = [...appIds]\n  newAppIds.push(appId)\n  const newWidgetIds = register[appId]?.supportedViews?.includes('widget')\n    ? [...widgetIds, appId]\n    : [...widgetIds]\n  const db = new PDB(walletAddress).createInstance('sentre')\n  await db.setItem('appIds', newAppIds)\n  await db.setItem('widgetIds', newWidgetIds)\n  return { appIds: newAppIds, widgetIds: newWidgetIds }\n})\n\nexport const uninstallApp = createAsyncThunk<\n  Partial<PageState>,\n  string,\n  { state: any }\n>(`${NAME}/uninstallApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { appIds, widgetIds },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (!appIds.includes(appId)) return {}\n  const newAppIds = appIds.filter((_appId: string) => _appId !== appId)\n  const newWidgetIds = widgetIds.filter((_appId: string) => _appId !== appId)\n  const pdb = new PDB(walletAddress)\n  const db = pdb.createInstance('sentre')\n  await db.setItem('appIds', newAppIds)\n  await db.setItem('widgetIds', newWidgetIds)\n  await pdb.dropInstance(appId)\n  return { appIds: newAppIds, widgetIds: newWidgetIds }\n})\n\n/**\n * Dashboard Actions\n */\nexport const updateDashboard = createAsyncThunk<\n  Partial<PageState>,\n  AppIds,\n  { state: any }\n>(`${NAME}/updateDashboard`, async (widgetIds, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  const db = new PDB(walletAddress).createInstance('sentre')\n  await db.setItem('widgetIds', widgetIds)\n  return { widgetIds }\n})\n\nexport const addWidgets = createAsyncThunk<\n  Partial<PageState>,\n  AppIds,\n  { state: any }\n>(`${NAME}/addWidgets`, async (appIds, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { widgetIds },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet')\n  const newWidgetIds: AppIds = [...widgetIds, ...appIds]\n  const db = new PDB(walletAddress).createInstance('sentre')\n  await db.setItem('widgetIds', newWidgetIds)\n  return { widgetIds: newWidgetIds }\n})\n\nexport const removeWidget = createAsyncThunk<\n  Partial<PageState>,\n  string,\n  { state: any }\n>(`${NAME}/removeWidget`, async (appId, { getState }) => {\n  const {\n    wallet: { address: walletAddress },\n    page: { widgetIds },\n  } = getState()\n  if (!account.isAddress(walletAddress))\n    throw new Error('Wallet is not connected yet.')\n  if (!widgetIds.includes(appId)) return {}\n  const newWidgetIds = widgetIds.filter((_appId: string) => _appId !== appId)\n  const db = new PDB(walletAddress).createInstance('sentre')\n  await db.setItem('widgetIds', newWidgetIds)\n  return { widgetIds: newWidgetIds }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        loadRegister.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        installManifest.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        loadPage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updatePage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        installApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        uninstallApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateDashboard.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        addWidgets.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        removeWidget.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, PoolData } from '@senswap/sen-js'\nimport configs from 'os/configs'\n\nconst {\n  sol: { taxmanAddress },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type PoolsState = Record<string, PoolData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'pools'\nconst initialState: PoolsState = {}\n\n/**\n * Actions\n */\n\nexport const getPools = createAsyncThunk(`${NAME}/getPools`, async () => {\n  const { swap } = window.sentre\n  // Get all pools\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await swap.connection.getProgramAccounts(swap.swapProgramId, {\n      filters: [\n        { dataSize: 257 },\n        { memcmp: { bytes: taxmanAddress, offset: 65 } },\n      ],\n    })\n  let bulk: PoolsState = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = swap.parsePoolData(buf)\n    bulk[address] = data\n  })\n  return bulk\n})\n\nexport const getPool = createAsyncThunk<\n  PoolsState,\n  { address: string },\n  { state: any }\n>(`${NAME}/getPool`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  const {\n    pools: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { swap } = window.sentre\n  const raw = await swap.getPoolData(address)\n  return { [address]: raw }\n})\n\nexport const upsetPool = createAsyncThunk<\n  PoolsState,\n  { address: string; data: PoolData },\n  { state: any }\n>(`${NAME}/upsetPool`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getPools.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\ntype SearchState = {\n  value: string\n  loading: boolean\n  disabled: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'search'\nconst initialState: SearchState = {\n  value: '',\n  loading: false,\n  disabled: false,\n}\n\n/**\n * Actions\n */\n\nexport const setValue = createAsyncThunk<\n  Partial<SearchState>,\n  string,\n  { state: any }\n>(`${NAME}/setValue`, async (value) => {\n  return { value }\n})\n\nexport const setLoading = createAsyncThunk<\n  Partial<SearchState>,\n  boolean,\n  { state: any }\n>(`${NAME}/setLoading`, async (loading) => {\n  return { loading }\n})\n\nexport const setDisabled = createAsyncThunk<\n  Partial<SearchState>,\n  boolean,\n  { state: any }\n>(`${NAME}/setDisabled`, async (disabled) => {\n  return { disabled }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setValue.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setDisabled.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type Infix = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\nexport type Theme = 'light' | 'dark'\n\nexport type UIState = {\n  theme: Theme\n  width: number\n  infix: Infix\n  touchable: boolean\n  visibleActionCenter: boolean\n  visibleInstaller: boolean\n}\n\nconst getInfix = (): Infix => {\n  const width = window.innerWidth\n  if (width < 576) return 'xs'\n  if (width < 768) return 'sm'\n  if (width < 992) return 'md'\n  if (width < 1200) return 'lg'\n  if (width < 1400) return 'xl'\n  return 'xxl'\n}\nconst isTouchable = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0\n}\nconst getTheme = (): Theme => {\n  if (window.matchMedia('(prefers-color-scheme: light)').matches) return 'light'\n  return 'dark'\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'ui'\nconst initialState: UIState = {\n  theme: getTheme(),\n  width: window.innerWidth,\n  infix: getInfix(),\n  touchable: isTouchable(),\n  visibleActionCenter: false,\n  visibleInstaller: false,\n}\n\n/**\n * Actions\n */\n\nexport const setTheme = createAsyncThunk(\n  `${NAME}/setTheme`,\n  async (theme: Theme) => {\n    return { theme }\n  },\n)\n\nexport const resize = createAsyncThunk(`${NAME}/resize`, async () => {\n  const width = window.innerWidth\n  const infix = getInfix()\n  return { width, infix }\n})\n\nexport const setVisibleActionCenter = createAsyncThunk(\n  `${NAME}/setVisibleActionCenter`,\n  async (visible: boolean) => {\n    return { visibleActionCenter: visible }\n  },\n)\n\nexport const setVisibleInstaller = createAsyncThunk(\n  `${NAME}/setVisibleInstaller`,\n  async (visible: boolean) => {\n    return { visibleInstaller: visible }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setTheme.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        resize.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisibleActionCenter.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisibleInstaller.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\nexport enum WalkThroughType {\n  Default,\n  NewComer,\n  Referral,\n}\n\ntype WalkThorughState = {\n  type: WalkThroughType\n  run: boolean\n  step: number\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'walkthrough'\nconst initialState: WalkThorughState = {\n  type: WalkThroughType.Default,\n  run: false,\n  step: 0,\n}\n\n/**\n * Actions\n */\n\nexport const setWalkthrough = createAsyncThunk<\n  Partial<WalkThorughState>,\n  Partial<WalkThorughState>,\n  { state: any }\n>(`${NAME}/setWalkthrough`, async (state) => {\n  return { ...state }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setWalkthrough.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { Lamports, SPLT, Swap, WalletInterface } from '@senswap/sen-js'\n\nimport configs from 'os/configs'\n\n/**\n * Interface & Utility\n */\n\nexport type WalletState = {\n  visible: boolean\n  address: string\n  lamports: bigint\n}\n\nconst initializeWindow = async (wallet: WalletInterface | undefined) => {\n  const {\n    sol: { node, spltAddress, splataAddress, swapAddress },\n  } = configs\n  window.sentre = {\n    wallet,\n    lamports: new Lamports(node),\n    splt: new SPLT(spltAddress, splataAddress, node),\n    swap: new Swap(swapAddress, spltAddress, splataAddress, node),\n  }\n}\n\nconst destroyWindow = async () => {\n  if (window.sentre?.wallet) window.sentre.wallet.disconnect()\n  await initializeWindow(undefined)\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'wallet'\nconst initialState: WalletState = {\n  visible: false,\n  address: '',\n  lamports: BigInt(0),\n}\n\n/**\n * Actions\n */\n\nexport const openWallet = createAsyncThunk(`${NAME}/openWallet`, async () => {\n  return { visible: true }\n})\n\nexport const closeWallet = createAsyncThunk(`${NAME}/closeWallet`, async () => {\n  return { visible: false }\n})\n\nexport const connectWallet = createAsyncThunk(\n  `${NAME}/connectWallet`,\n  async (wallet: any) => {\n    if (!wallet) throw new Error('Invalid wallet instance')\n    await initializeWindow(wallet)\n    const address = await wallet.getAddress()\n    const lamports = await window.sentre.lamports.getLamports(address)\n    return { address, lamports: BigInt(lamports), visible: false }\n  },\n)\n\nexport const updateWallet = createAsyncThunk(\n  `${NAME}/updateWallet`,\n  async ({ lamports }: Partial<WalletState>) => {\n    return { lamports }\n  },\n)\n\nexport const disconnectWallet = createAsyncThunk(\n  `${NAME}/disconnectWallet`,\n  async () => {\n    await destroyWindow()\n    window.location.reload() // Reset all redux store\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        openWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        closeWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        connectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        disconnectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n"],"names":["SOLVARS","spltAddress","splataAddress","devnet","node","chainId","sntrAddress","sntrPoolAddress","swapAddress","taxmanAddress","testnet","mainnet","DEFAULT_APP_ID","process","devApp","url","appId","name","author","email","supportedViews","split","map","view","trim","filter","includes","tags","tag","description","verified","development","defaultAppId","extra","senreg","staging","production","base","window","location","origin","baseURL","sol","net","register","env","referral","stat","Context","createContext","children","style","antd","ui","useRootSelector","state","provider","useMemo","configProvider","getPopupContainer","document","getElementById","undefined","Provider","value","id","height","backgroundColor","ConfigProvider","UIComsumer","Consumer","Children","child","cloneElement","withUI","WrappedComponent","HOC","Component","render","forwardedRef","rest","this","props","ref","forwardRef","useUI","useContext","pools","PoolContextComsumer","withPool","usePool","wallet","WalletContextComsumer","withWallet","useWallet","accounts","AccountContextComsumer","withAccount","useAccount","configs","DELIMITER","PRESET","tokenize","context","minlength","DOCUMENT","index","field","constructor","tokenMap","engine","cluster","loading","queue","_init","async","size","Promise","push","resolve","tokenList","TokenListProvider","filterByChainId","getList","concat","supplementary","sntr","forEach","token","set","address","Document","doc","add","length","shift","all","Array","from","values","findByAddress","get","addr","find","keyword","limit","tokens","key","search","result","findIndex","Map","tokenProvider","TokenProvider","dispatch","useRootDispatch","mints","getMint","useCallback","_getMint","unwrap","getDecimals","account","mintAddress","Error","tokenInfo","decimals","Object","mint_lpt","mintData","MintContextComsumer","withMint","useMint","symbol","extensions","coingeckoId","logoURI","NAME","getAccounts","createAsyncThunk","owner","splt","sentre","ownerPublicKey","connection","getTokenAccountsByOwner","programId","spltProgramId","bulk","pubkey","data","buf","toBase58","parseAccountData","getAccount","getState","getAccountData","upsetAccount","deleteAccount","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","payload","assign","loadVisited","_","walletAddress","db","PDB","createInstance","visited","getItem","updateVisited","setItem","loadReferred","referred","updateReferred","createStoreHook","RootContext","createDispatchHook","createSelectorHook","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","reducer","flags","page","walkthrough","force","getMintData","upsetMint","deleteMint","troubleshoot","appIds","isArray","widgetIds","loadRegister","res","fetch","json","er","fetchRegister","installManifest","manifest","newAppIds","newWidgetIds","newRegister","loadPage","updatePage","installApp","uninstallApp","_appId","pdb","dropInstance","updateDashboard","addWidgets","removeWidget","getPools","swap","getProgramAccounts","swapProgramId","filters","dataSize","memcmp","bytes","offset","parsePoolData","getPool","getPoolData","upsetPool","setValue","setLoading","setDisabled","disabled","getInfix","width","innerWidth","theme","matchMedia","matches","infix","touchable","navigator","maxTouchPoints","visibleActionCenter","visibleInstaller","setTheme","resize","setVisibleActionCenter","visible","setVisibleInstaller","WalkThroughType","type","Default","run","step","setWalkthrough","initializeWindow","lamports","Lamports","SPLT","Swap","BigInt","openWallet","closeWallet","connectWallet","getAddress","getLamports","updateWallet","disconnectWallet","disconnect","destroyWindow","reload"],"sourceRoot":""}